-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation listFineTuningEvents
module OpenAI.Operations.ListFineTuningEvents where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified OpenAI.Common
import OpenAI.Types

-- | > GET /fine_tuning/jobs/{fine_tuning_job_id}/events
-- 
-- Get status updates for a fine-tuning job.
listFineTuningEvents :: forall m . OpenAI.Common.MonadHTTP m => ListFineTuningEventsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> OpenAI.Common.ClientT m (Network.HTTP.Client.Types.Response ListFineTuningEventsResponse) -- ^ Monadic computation which returns the result of the operation
listFineTuningEvents parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either ListFineTuningEventsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> ListFineTuningEventsResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                     ListFineTuningJobEventsResponse)
                                                                                                                                                                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (OpenAI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET") ("/fine_tuning/jobs/" GHC.Base.<> (OpenAI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (OpenAI.Common.textToByte GHC.Base.$ OpenAI.Common.stringifyModel (listFineTuningEventsParametersPathFineTuningJobId parameters))) GHC.Base.<> "/events")) [OpenAI.Common.QueryParameter (Data.Text.Internal.pack "after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> listFineTuningEventsParametersQueryAfter parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
penAI.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> listFineTuningEventsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/fine_tuning\/jobs\/{fine_tuning_job_id}\/events.GET.parameters@ in the specification.
-- 
-- 
data ListFineTuningEventsParameters = ListFineTuningEventsParameters {
  -- | pathFine_tuning_job_id: Represents the parameter named \'fine_tuning_job_id\'
  -- 
  -- The ID of the fine-tuning job to get events for.
  listFineTuningEventsParametersPathFineTuningJobId :: Data.Text.Internal.Text
  -- | queryAfter: Represents the parameter named \'after\'
  -- 
  -- Identifier for the last event from the previous pagination request.
  , listFineTuningEventsParametersQueryAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryLimit: Represents the parameter named \'limit\'
  -- 
  -- Number of events to retrieve.
  , listFineTuningEventsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ListFineTuningEventsParameters
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathFine_tuning_job_id" Data.Aeson.Types.ToJSON..= listFineTuningEventsParametersPathFineTuningJobId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAfter" Data.Aeson.Types.ToJSON..=)) (listFineTuningEventsParametersQueryAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (listFineTuningEventsParametersQueryLimit obj) : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathFine_tuning_job_id" Data.Aeson.Types.ToJSON..= listFineTuningEventsParametersPathFineTuningJobId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAfter" Data.Aeson.Types.ToJSON..=)) (listFineTuningEventsParametersQueryAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (listFineTuningEventsParametersQueryLimit obj) : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ListFineTuningEventsParameters
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ListFineTuningEventsParameters" (\obj -> ((GHC.Base.pure ListFineTuningEventsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathFine_tuning_job_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAfter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit"))}
-- | Create a new 'ListFineTuningEventsParameters' with all required fields.
mkListFineTuningEventsParameters :: Data.Text.Internal.Text -- ^ 'listFineTuningEventsParametersPathFineTuningJobId'
  -> ListFineTuningEventsParameters
mkListFineTuningEventsParameters listFineTuningEventsParametersPathFineTuningJobId = ListFineTuningEventsParameters{listFineTuningEventsParametersPathFineTuningJobId = listFineTuningEventsParametersPathFineTuningJobId,
                                                                                                                    listFineTuningEventsParametersQueryAfter = GHC.Maybe.Nothing,
                                                                                                                    listFineTuningEventsParametersQueryLimit = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'listFineTuningEvents'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'ListFineTuningEventsResponseError' is used.
data ListFineTuningEventsResponse =
   ListFineTuningEventsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | ListFineTuningEventsResponse200 ListFineTuningJobEventsResponse -- ^ OK
  deriving (GHC.Show.Show, GHC.Classes.Eq)
