-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema FineTuningJob
module OpenAI.Types.FineTuningJob where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias

-- | Defines the object schema located at @components.schemas.FineTuningJob@ in the specification.
-- 
-- The \`fine_tuning.job\` object represents a fine-tuning job that has been created through the API.
data FineTuningJob = FineTuningJob {
  -- | created_at: The Unix timestamp (in seconds) for when the fine-tuning job was created.
  fineTuningJobCreatedAt :: GHC.Types.Int
  -- | error: For fine-tuning jobs that have \`failed\`, this will contain more information on the cause of the failure.
  , fineTuningJobError :: (OpenAI.Common.Nullable FineTuningJobError'NonNullable)
  -- | fine_tuned_model: The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
  , fineTuningJobFineTunedModel :: (OpenAI.Common.Nullable Data.Text.Internal.Text)
  -- | finished_at: The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
  , fineTuningJobFinishedAt :: (OpenAI.Common.Nullable GHC.Types.Int)
  -- | hyperparameters: The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](\/docs\/guides\/fine-tuning) for more details.
  , fineTuningJobHyperparameters :: FineTuningJobHyperparameters'
  -- | id: The object identifier, which can be referenced in the API endpoints.
  , fineTuningJobId :: Data.Text.Internal.Text
  -- | model: The base model that is being fine-tuned.
  , fineTuningJobModel :: Data.Text.Internal.Text
  -- | organization_id: The organization that owns the fine-tuning job.
  , fineTuningJobOrganizationId :: Data.Text.Internal.Text
  -- | result_files: The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](\/docs\/api-reference\/files\/retrieve-contents).
  , fineTuningJobResultFiles :: ([Data.Text.Internal.Text])
  -- | status: The current status of the fine-tuning job, which can be either \`validating_files\`, \`queued\`, \`running\`, \`succeeded\`, \`failed\`, or \`cancelled\`.
  , fineTuningJobStatus :: FineTuningJobStatus'
  -- | trained_tokens: The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
  , fineTuningJobTrainedTokens :: (OpenAI.Common.Nullable GHC.Types.Int)
  -- | training_file: The file ID used for training. You can retrieve the training data with the [Files API](\/docs\/api-reference\/files\/retrieve-contents).
  , fineTuningJobTrainingFile :: Data.Text.Internal.Text
  -- | validation_file: The file ID used for validation. You can retrieve the validation results with the [Files API](\/docs\/api-reference\/files\/retrieve-contents).
  , fineTuningJobValidationFile :: (OpenAI.Common.Nullable Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON FineTuningJob
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["created_at" Data.Aeson.Types.ToJSON..= fineTuningJobCreatedAt obj] : ["error" Data.Aeson.Types.ToJSON..= fineTuningJobError obj] : ["fine_tuned_model" Data.Aeson.Types.ToJSON..= fineTuningJobFineTunedModel obj] : ["finished_at" Data.Aeson.Types.ToJSON..= fineTuningJobFinishedAt obj] : ["hyperparameters" Data.Aeson.Types.ToJSON..= fineTuningJobHyperparameters obj] : ["id" Data.Aeson.Types.ToJSON..= fineTuningJobId obj] : ["model" Data.Aeson.Types.ToJSON..= fineTuningJobModel obj] : ["organization_id" Data.Aeson.Types.ToJSON..= fineTuningJobOrganizationId obj] : ["result_files" Data.Aeson.Types.ToJSON..= fineTuningJobResultFiles obj] : ["status" Data.Aeson.Types.ToJSON..= fineTuningJobStatus obj] : ["trained_tokens" Data.Aeson.Types.ToJSON..= fineTuningJobTrainedTokens obj] : ["training_file" Data.Aeson.Types.ToJSON..= fineTuningJobTrainingFile obj] : ["validation_file" Data.Aeson.Types.ToJSON..= fineTuningJobValidationFile obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "fine_tuning.job"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["created_at" Data.Aeson.Types.ToJSON..= fineTuningJobCreatedAt obj] : ["error" Data.Aeson.Types.ToJSON..= fineTuningJobError obj] : ["fine_tuned_model" Data.Aeson.Types.ToJSON..= fineTuningJobFineTunedModel obj] : ["finished_at" Data.Aeson.Types.ToJSON..= fineTuningJobFinishedAt obj] : ["hyperparameters" Data.Aeson.Types.ToJSON..= fineTuningJobHyperparameters obj] : ["id" Data.Aeson.Types.ToJSON..= fineTuningJobId obj] : ["model" Data.Aeson.Types.ToJSON..= fineTuningJobModel obj] : ["organization_id" Data.Aeson.Types.ToJSON..= fineTuningJobOrganizationId obj] : ["result_files" Data.Aeson.Types.ToJSON..= fineTuningJobResultFiles obj] : ["status" Data.Aeson.Types.ToJSON..= fineTuningJobStatus obj] : ["trained_tokens" Data.Aeson.Types.ToJSON..= fineTuningJobTrainedTokens obj] : ["training_file" Data.Aeson.Types.ToJSON..= fineTuningJobTrainingFile obj] : ["validation_file" Data.Aeson.Types.ToJSON..= fineTuningJobValidationFile obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "fine_tuning.job"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON FineTuningJob
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "FineTuningJob" (\obj -> ((((((((((((GHC.Base.pure FineTuningJob GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "fine_tuned_model")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "finished_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hyperparameters")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "model")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "organization_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "result_files")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "trained_tokens")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "training_file")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "validation_file"))}
-- | Create a new 'FineTuningJob' with all required fields.
mkFineTuningJob :: GHC.Types.Int -- ^ 'fineTuningJobCreatedAt'
  -> OpenAI.Common.Nullable FineTuningJobError'NonNullable -- ^ 'fineTuningJobError'
  -> OpenAI.Common.Nullable Data.Text.Internal.Text -- ^ 'fineTuningJobFineTunedModel'
  -> OpenAI.Common.Nullable GHC.Types.Int -- ^ 'fineTuningJobFinishedAt'
  -> FineTuningJobHyperparameters' -- ^ 'fineTuningJobHyperparameters'
  -> Data.Text.Internal.Text -- ^ 'fineTuningJobId'
  -> Data.Text.Internal.Text -- ^ 'fineTuningJobModel'
  -> Data.Text.Internal.Text -- ^ 'fineTuningJobOrganizationId'
  -> [Data.Text.Internal.Text] -- ^ 'fineTuningJobResultFiles'
  -> FineTuningJobStatus' -- ^ 'fineTuningJobStatus'
  -> OpenAI.Common.Nullable GHC.Types.Int -- ^ 'fineTuningJobTrainedTokens'
  -> Data.Text.Internal.Text -- ^ 'fineTuningJobTrainingFile'
  -> OpenAI.Common.Nullable Data.Text.Internal.Text -- ^ 'fineTuningJobValidationFile'
  -> FineTuningJob
mkFineTuningJob fineTuningJobCreatedAt fineTuningJobError fineTuningJobFineTunedModel fineTuningJobFinishedAt fineTuningJobHyperparameters fineTuningJobId fineTuningJobModel fineTuningJobOrganizationId fineTuningJobResultFiles fineTuningJobStatus fineTuningJobTrainedTokens fineTuningJobTrainingFile fineTuningJobValidationFile = FineTuningJob{fineTuningJobCreatedAt = fineTuningJobCreatedAt,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobError = fineTuningJobError,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobFineTunedModel = fineTuningJobFineTunedModel,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobFinishedAt = fineTuningJobFinishedAt,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobHyperparameters = fineTuningJobHyperparameters,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobId = fineTuningJobId,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobModel = fineTuningJobModel,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobOrganizationId = fineTuningJobOrganizationId,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobResultFiles = fineTuningJobResultFiles,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobStatus = fineTuningJobStatus,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobTrainedTokens = fineTuningJobTrainedTokens,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobTrainingFile = fineTuningJobTrainingFile,
                                                                                                                                                                                                                                                                                                                                                        fineTuningJobValidationFile = fineTuningJobValidationFile}
-- | Defines the object schema located at @components.schemas.FineTuningJob.properties.error@ in the specification.
-- 
-- For fine-tuning jobs that have \`failed\`, this will contain more information on the cause of the failure.
data FineTuningJobError'NonNullable = FineTuningJobError'NonNullable {
  -- | code: A machine-readable error code.
  fineTuningJobError'NonNullableCode :: Data.Text.Internal.Text
  -- | message: A human-readable error message.
  , fineTuningJobError'NonNullableMessage :: Data.Text.Internal.Text
  -- | param: The parameter that was invalid, usually \`training_file\` or \`validation_file\`. This field will be null if the failure was not parameter-specific.
  , fineTuningJobError'NonNullableParam :: (OpenAI.Common.Nullable Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON FineTuningJobError'NonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= fineTuningJobError'NonNullableCode obj] : ["message" Data.Aeson.Types.ToJSON..= fineTuningJobError'NonNullableMessage obj] : ["param" Data.Aeson.Types.ToJSON..= fineTuningJobError'NonNullableParam obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= fineTuningJobError'NonNullableCode obj] : ["message" Data.Aeson.Types.ToJSON..= fineTuningJobError'NonNullableMessage obj] : ["param" Data.Aeson.Types.ToJSON..= fineTuningJobError'NonNullableParam obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON FineTuningJobError'NonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "FineTuningJobError'NonNullable" (\obj -> ((GHC.Base.pure FineTuningJobError'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "param"))}
-- | Create a new 'FineTuningJobError'NonNullable' with all required fields.
mkFineTuningJobError'NonNullable :: Data.Text.Internal.Text -- ^ 'fineTuningJobError'NonNullableCode'
  -> Data.Text.Internal.Text -- ^ 'fineTuningJobError'NonNullableMessage'
  -> OpenAI.Common.Nullable Data.Text.Internal.Text -- ^ 'fineTuningJobError'NonNullableParam'
  -> FineTuningJobError'NonNullable
mkFineTuningJobError'NonNullable fineTuningJobError'NonNullableCode fineTuningJobError'NonNullableMessage fineTuningJobError'NonNullableParam = FineTuningJobError'NonNullable{fineTuningJobError'NonNullableCode = fineTuningJobError'NonNullableCode,
                                                                                                                                                                               fineTuningJobError'NonNullableMessage = fineTuningJobError'NonNullableMessage,
                                                                                                                                                                               fineTuningJobError'NonNullableParam = fineTuningJobError'NonNullableParam}
-- | Defines the object schema located at @components.schemas.FineTuningJob.properties.hyperparameters@ in the specification.
-- 
-- The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](\/docs\/guides\/fine-tuning) for more details.
data FineTuningJobHyperparameters' = FineTuningJobHyperparameters' {
  -- | n_epochs: The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
  -- \"auto\" decides the optimal number of epochs based on the size of the dataset. If setting the number manually, we support any number between 1 and 50 epochs.
  fineTuningJobHyperparameters'NEpochs :: FineTuningJobHyperparameters'NEpochs'Variants
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON FineTuningJobHyperparameters'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["n_epochs" Data.Aeson.Types.ToJSON..= fineTuningJobHyperparameters'NEpochs obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["n_epochs" Data.Aeson.Types.ToJSON..= fineTuningJobHyperparameters'NEpochs obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON FineTuningJobHyperparameters'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "FineTuningJobHyperparameters'" (\obj -> GHC.Base.pure FineTuningJobHyperparameters' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "n_epochs"))}
-- | Create a new 'FineTuningJobHyperparameters'' with all required fields.
mkFineTuningJobHyperparameters' :: FineTuningJobHyperparameters'NEpochs'Variants -- ^ 'fineTuningJobHyperparameters'NEpochs'
  -> FineTuningJobHyperparameters'
mkFineTuningJobHyperparameters' fineTuningJobHyperparameters'NEpochs = FineTuningJobHyperparameters'{fineTuningJobHyperparameters'NEpochs = fineTuningJobHyperparameters'NEpochs}
-- | Defines the oneOf schema located at @components.schemas.FineTuningJob.properties.hyperparameters.properties.n_epochs.oneOf@ in the specification.
-- 
-- The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
-- \"auto\" decides the optimal number of epochs based on the size of the dataset. If setting the number manually, we support any number between 1 and 50 epochs.
data FineTuningJobHyperparameters'NEpochs'Variants =
   FineTuningJobHyperparameters'NEpochs'Auto -- ^ Represents the JSON value @"auto"@
  | FineTuningJobHyperparameters'NEpochs'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON FineTuningJobHyperparameters'NEpochs'Variants
    where {toJSON (FineTuningJobHyperparameters'NEpochs'Int a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (FineTuningJobHyperparameters'NEpochs'Auto) = "auto"}
instance Data.Aeson.Types.FromJSON.FromJSON FineTuningJobHyperparameters'NEpochs'Variants
    where {parseJSON val = if | val GHC.Classes.== "auto" -> GHC.Base.pure FineTuningJobHyperparameters'NEpochs'Auto
                              | GHC.Base.otherwise -> case (FineTuningJobHyperparameters'NEpochs'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                      {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                                                       Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
-- | Defines the enum schema located at @components.schemas.FineTuningJob.properties.status@ in the specification.
-- 
-- The current status of the fine-tuning job, which can be either \`validating_files\`, \`queued\`, \`running\`, \`succeeded\`, \`failed\`, or \`cancelled\`.
data FineTuningJobStatus' =
   FineTuningJobStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | FineTuningJobStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | FineTuningJobStatus'EnumValidatingFiles -- ^ Represents the JSON value @"validating_files"@
  | FineTuningJobStatus'EnumQueued -- ^ Represents the JSON value @"queued"@
  | FineTuningJobStatus'EnumRunning -- ^ Represents the JSON value @"running"@
  | FineTuningJobStatus'EnumSucceeded -- ^ Represents the JSON value @"succeeded"@
  | FineTuningJobStatus'EnumFailed -- ^ Represents the JSON value @"failed"@
  | FineTuningJobStatus'EnumCancelled -- ^ Represents the JSON value @"cancelled"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON FineTuningJobStatus'
    where {toJSON (FineTuningJobStatus'Other val) = val;
           toJSON (FineTuningJobStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val;
           toJSON (FineTuningJobStatus'EnumValidatingFiles) = "validating_files";
           toJSON (FineTuningJobStatus'EnumQueued) = "queued";
           toJSON (FineTuningJobStatus'EnumRunning) = "running";
           toJSON (FineTuningJobStatus'EnumSucceeded) = "succeeded";
           toJSON (FineTuningJobStatus'EnumFailed) = "failed";
           toJSON (FineTuningJobStatus'EnumCancelled) = "cancelled"}
instance Data.Aeson.Types.FromJSON.FromJSON FineTuningJobStatus'
    where {parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "validating_files" -> FineTuningJobStatus'EnumValidatingFiles
                                             | val GHC.Classes.== "queued" -> FineTuningJobStatus'EnumQueued
                                             | val GHC.Classes.== "running" -> FineTuningJobStatus'EnumRunning
                                             | val GHC.Classes.== "succeeded" -> FineTuningJobStatus'EnumSucceeded
                                             | val GHC.Classes.== "failed" -> FineTuningJobStatus'EnumFailed
                                             | val GHC.Classes.== "cancelled" -> FineTuningJobStatus'EnumCancelled
                                             | GHC.Base.otherwise -> FineTuningJobStatus'Other val)}
