-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema MessageContentImageFileObject
module OpenAI.Types.MessageContentImageFileObject where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias

-- | Defines the object schema located at @components.schemas.MessageContentImageFileObject@ in the specification.
-- 
-- References an image [File](\/docs\/api-reference\/files) in the content of a message.
data MessageContentImageFileObject = MessageContentImageFileObject {
  -- | image_file
  messageContentImageFileObjectImageFile :: MessageContentImageFileObjectImageFile'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON MessageContentImageFileObject
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["image_file" Data.Aeson.Types.ToJSON..= messageContentImageFileObjectImageFile obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "image_file"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["image_file" Data.Aeson.Types.ToJSON..= messageContentImageFileObjectImageFile obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "image_file"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON MessageContentImageFileObject
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "MessageContentImageFileObject" (\obj -> GHC.Base.pure MessageContentImageFileObject GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "image_file"))}
-- | Create a new 'MessageContentImageFileObject' with all required fields.
mkMessageContentImageFileObject :: MessageContentImageFileObjectImageFile' -- ^ 'messageContentImageFileObjectImageFile'
  -> MessageContentImageFileObject
mkMessageContentImageFileObject messageContentImageFileObjectImageFile = MessageContentImageFileObject{messageContentImageFileObjectImageFile = messageContentImageFileObjectImageFile}
-- | Defines the object schema located at @components.schemas.MessageContentImageFileObject.properties.image_file@ in the specification.
-- 
-- 
data MessageContentImageFileObjectImageFile' = MessageContentImageFileObjectImageFile' {
  -- | file_id: The [File](\/docs\/api-reference\/files) ID of the image in the message content.
  messageContentImageFileObjectImageFile'FileId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON MessageContentImageFileObjectImageFile'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["file_id" Data.Aeson.Types.ToJSON..= messageContentImageFileObjectImageFile'FileId obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["file_id" Data.Aeson.Types.ToJSON..= messageContentImageFileObjectImageFile'FileId obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON MessageContentImageFileObjectImageFile'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "MessageContentImageFileObjectImageFile'" (\obj -> GHC.Base.pure MessageContentImageFileObjectImageFile' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "file_id"))}
-- | Create a new 'MessageContentImageFileObjectImageFile'' with all required fields.
mkMessageContentImageFileObjectImageFile' :: Data.Text.Internal.Text -- ^ 'messageContentImageFileObjectImageFile'FileId'
  -> MessageContentImageFileObjectImageFile'
mkMessageContentImageFileObjectImageFile' messageContentImageFileObjectImageFile'FileId = MessageContentImageFileObjectImageFile'{messageContentImageFileObjectImageFile'FileId = messageContentImageFileObjectImageFile'FileId}
