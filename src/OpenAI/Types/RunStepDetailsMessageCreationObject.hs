-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema RunStepDetailsMessageCreationObject
module OpenAI.Types.RunStepDetailsMessageCreationObject where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias

-- | Defines the object schema located at @components.schemas.RunStepDetailsMessageCreationObject@ in the specification.
-- 
-- Details of the message creation by the run step.
data RunStepDetailsMessageCreationObject = RunStepDetailsMessageCreationObject {
  -- | message_creation
  runStepDetailsMessageCreationObjectMessageCreation :: RunStepDetailsMessageCreationObjectMessageCreation'
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RunStepDetailsMessageCreationObject
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["message_creation" Data.Aeson.Types.ToJSON..= runStepDetailsMessageCreationObjectMessageCreation obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "message_creation"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["message_creation" Data.Aeson.Types.ToJSON..= runStepDetailsMessageCreationObjectMessageCreation obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "message_creation"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON RunStepDetailsMessageCreationObject
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "RunStepDetailsMessageCreationObject" (\obj -> GHC.Base.pure RunStepDetailsMessageCreationObject GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message_creation"))}
-- | Create a new 'RunStepDetailsMessageCreationObject' with all required fields.
mkRunStepDetailsMessageCreationObject :: RunStepDetailsMessageCreationObjectMessageCreation' -- ^ 'runStepDetailsMessageCreationObjectMessageCreation'
  -> RunStepDetailsMessageCreationObject
mkRunStepDetailsMessageCreationObject runStepDetailsMessageCreationObjectMessageCreation = RunStepDetailsMessageCreationObject{runStepDetailsMessageCreationObjectMessageCreation = runStepDetailsMessageCreationObjectMessageCreation}
-- | Defines the object schema located at @components.schemas.RunStepDetailsMessageCreationObject.properties.message_creation@ in the specification.
-- 
-- 
data RunStepDetailsMessageCreationObjectMessageCreation' = RunStepDetailsMessageCreationObjectMessageCreation' {
  -- | message_id: The ID of the message that was created by this run step.
  runStepDetailsMessageCreationObjectMessageCreation'MessageId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RunStepDetailsMessageCreationObjectMessageCreation'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["message_id" Data.Aeson.Types.ToJSON..= runStepDetailsMessageCreationObjectMessageCreation'MessageId obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["message_id" Data.Aeson.Types.ToJSON..= runStepDetailsMessageCreationObjectMessageCreation'MessageId obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON RunStepDetailsMessageCreationObjectMessageCreation'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "RunStepDetailsMessageCreationObjectMessageCreation'" (\obj -> GHC.Base.pure RunStepDetailsMessageCreationObjectMessageCreation' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message_id"))}
-- | Create a new 'RunStepDetailsMessageCreationObjectMessageCreation'' with all required fields.
mkRunStepDetailsMessageCreationObjectMessageCreation' :: Data.Text.Internal.Text -- ^ 'runStepDetailsMessageCreationObjectMessageCreation'MessageId'
  -> RunStepDetailsMessageCreationObjectMessageCreation'
mkRunStepDetailsMessageCreationObjectMessageCreation' runStepDetailsMessageCreationObjectMessageCreation'MessageId = RunStepDetailsMessageCreationObjectMessageCreation'{runStepDetailsMessageCreationObjectMessageCreation'MessageId = runStepDetailsMessageCreationObjectMessageCreation'MessageId}
