-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ChatCompletionMessageToolCall
module OpenAI.Types.ChatCompletionMessageToolCall where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias

-- | Defines the object schema located at @components.schemas.ChatCompletionMessageToolCall@ in the specification.
-- 
-- 
data ChatCompletionMessageToolCall = ChatCompletionMessageToolCall {
  -- | function: The function that the model called.
  chatCompletionMessageToolCallFunction :: ChatCompletionMessageToolCallFunction'
  -- | id: The ID of the tool call.
  , chatCompletionMessageToolCallId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ChatCompletionMessageToolCall
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["function" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallFunction obj] : ["id" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallId obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "function"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["function" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallFunction obj] : ["id" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallId obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "function"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ChatCompletionMessageToolCall
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ChatCompletionMessageToolCall" (\obj -> (GHC.Base.pure ChatCompletionMessageToolCall GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "function")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id"))}
-- | Create a new 'ChatCompletionMessageToolCall' with all required fields.
mkChatCompletionMessageToolCall :: ChatCompletionMessageToolCallFunction' -- ^ 'chatCompletionMessageToolCallFunction'
  -> Data.Text.Internal.Text -- ^ 'chatCompletionMessageToolCallId'
  -> ChatCompletionMessageToolCall
mkChatCompletionMessageToolCall chatCompletionMessageToolCallFunction chatCompletionMessageToolCallId = ChatCompletionMessageToolCall{chatCompletionMessageToolCallFunction = chatCompletionMessageToolCallFunction,
                                                                                                                                      chatCompletionMessageToolCallId = chatCompletionMessageToolCallId}
-- | Defines the object schema located at @components.schemas.ChatCompletionMessageToolCall.properties.function@ in the specification.
-- 
-- The function that the model called.
data ChatCompletionMessageToolCallFunction' = ChatCompletionMessageToolCallFunction' {
  -- | arguments: The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
  chatCompletionMessageToolCallFunction'Arguments :: Data.Text.Internal.Text
  -- | name: The name of the function to call.
  , chatCompletionMessageToolCallFunction'Name :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ChatCompletionMessageToolCallFunction'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["arguments" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallFunction'Arguments obj] : ["name" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallFunction'Name obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["arguments" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallFunction'Arguments obj] : ["name" Data.Aeson.Types.ToJSON..= chatCompletionMessageToolCallFunction'Name obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ChatCompletionMessageToolCallFunction'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ChatCompletionMessageToolCallFunction'" (\obj -> (GHC.Base.pure ChatCompletionMessageToolCallFunction' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "arguments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name"))}
-- | Create a new 'ChatCompletionMessageToolCallFunction'' with all required fields.
mkChatCompletionMessageToolCallFunction' :: Data.Text.Internal.Text -- ^ 'chatCompletionMessageToolCallFunction'Arguments'
  -> Data.Text.Internal.Text -- ^ 'chatCompletionMessageToolCallFunction'Name'
  -> ChatCompletionMessageToolCallFunction'
mkChatCompletionMessageToolCallFunction' chatCompletionMessageToolCallFunction'Arguments chatCompletionMessageToolCallFunction'Name = ChatCompletionMessageToolCallFunction'{chatCompletionMessageToolCallFunction'Arguments = chatCompletionMessageToolCallFunction'Arguments,
                                                                                                                                                                             chatCompletionMessageToolCallFunction'Name = chatCompletionMessageToolCallFunction'Name}
