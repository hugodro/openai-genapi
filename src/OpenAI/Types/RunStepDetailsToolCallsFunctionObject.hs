-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema RunStepDetailsToolCallsFunctionObject
module OpenAI.Types.RunStepDetailsToolCallsFunctionObject where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias

-- | Defines the object schema located at @components.schemas.RunStepDetailsToolCallsFunctionObject@ in the specification.
-- 
-- 
data RunStepDetailsToolCallsFunctionObject = RunStepDetailsToolCallsFunctionObject {
  -- | function: The definition of the function that was called.
  runStepDetailsToolCallsFunctionObjectFunction :: RunStepDetailsToolCallsFunctionObjectFunction'
  -- | id: The ID of the tool call object.
  , runStepDetailsToolCallsFunctionObjectId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RunStepDetailsToolCallsFunctionObject
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["function" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction obj] : ["id" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectId obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "function"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["function" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction obj] : ["id" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectId obj] : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "function"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON RunStepDetailsToolCallsFunctionObject
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "RunStepDetailsToolCallsFunctionObject" (\obj -> (GHC.Base.pure RunStepDetailsToolCallsFunctionObject GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "function")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id"))}
-- | Create a new 'RunStepDetailsToolCallsFunctionObject' with all required fields.
mkRunStepDetailsToolCallsFunctionObject :: RunStepDetailsToolCallsFunctionObjectFunction' -- ^ 'runStepDetailsToolCallsFunctionObjectFunction'
  -> Data.Text.Internal.Text -- ^ 'runStepDetailsToolCallsFunctionObjectId'
  -> RunStepDetailsToolCallsFunctionObject
mkRunStepDetailsToolCallsFunctionObject runStepDetailsToolCallsFunctionObjectFunction runStepDetailsToolCallsFunctionObjectId = RunStepDetailsToolCallsFunctionObject{runStepDetailsToolCallsFunctionObjectFunction = runStepDetailsToolCallsFunctionObjectFunction,
                                                                                                                                                                      runStepDetailsToolCallsFunctionObjectId = runStepDetailsToolCallsFunctionObjectId}
-- | Defines the object schema located at @components.schemas.RunStepDetailsToolCallsFunctionObject.properties.function@ in the specification.
-- 
-- The definition of the function that was called.
data RunStepDetailsToolCallsFunctionObjectFunction' = RunStepDetailsToolCallsFunctionObjectFunction' {
  -- | arguments: The arguments passed to the function.
  runStepDetailsToolCallsFunctionObjectFunction'Arguments :: Data.Text.Internal.Text
  -- | name: The name of the function.
  , runStepDetailsToolCallsFunctionObjectFunction'Name :: Data.Text.Internal.Text
  -- | output: The output of the function. This will be \`null\` if the outputs have not been [submitted](\/docs\/api-reference\/runs\/submitToolOutputs) yet.
  , runStepDetailsToolCallsFunctionObjectFunction'Output :: (OpenAI.Common.Nullable Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RunStepDetailsToolCallsFunctionObjectFunction'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["arguments" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction'Arguments obj] : ["name" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction'Name obj] : ["output" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction'Output obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["arguments" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction'Arguments obj] : ["name" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction'Name obj] : ["output" Data.Aeson.Types.ToJSON..= runStepDetailsToolCallsFunctionObjectFunction'Output obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON RunStepDetailsToolCallsFunctionObjectFunction'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "RunStepDetailsToolCallsFunctionObjectFunction'" (\obj -> ((GHC.Base.pure RunStepDetailsToolCallsFunctionObjectFunction' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "arguments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "output"))}
-- | Create a new 'RunStepDetailsToolCallsFunctionObjectFunction'' with all required fields.
mkRunStepDetailsToolCallsFunctionObjectFunction' :: Data.Text.Internal.Text -- ^ 'runStepDetailsToolCallsFunctionObjectFunction'Arguments'
  -> Data.Text.Internal.Text -- ^ 'runStepDetailsToolCallsFunctionObjectFunction'Name'
  -> OpenAI.Common.Nullable Data.Text.Internal.Text -- ^ 'runStepDetailsToolCallsFunctionObjectFunction'Output'
  -> RunStepDetailsToolCallsFunctionObjectFunction'
mkRunStepDetailsToolCallsFunctionObjectFunction' runStepDetailsToolCallsFunctionObjectFunction'Arguments runStepDetailsToolCallsFunctionObjectFunction'Name runStepDetailsToolCallsFunctionObjectFunction'Output = RunStepDetailsToolCallsFunctionObjectFunction'{runStepDetailsToolCallsFunctionObjectFunction'Arguments = runStepDetailsToolCallsFunctionObjectFunction'Arguments,
                                                                                                                                                                                                                                                                  runStepDetailsToolCallsFunctionObjectFunction'Name = runStepDetailsToolCallsFunctionObjectFunction'Name,
                                                                                                                                                                                                                                                                  runStepDetailsToolCallsFunctionObjectFunction'Output = runStepDetailsToolCallsFunctionObjectFunction'Output}
