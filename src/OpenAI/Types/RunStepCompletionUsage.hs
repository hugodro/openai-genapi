-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema RunStepCompletionUsage
module OpenAI.Types.RunStepCompletionUsage where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias

-- | Defines the object schema located at @components.schemas.RunStepCompletionUsage@ in the specification.
-- 
-- Usage statistics related to the run step. This value will be \`null\` while the run step\'s status is \`in_progress\`.
data RunStepCompletionUsageNonNullable = RunStepCompletionUsageNonNullable {
  -- | completion_tokens: Number of completion tokens used over the course of the run step.
  runStepCompletionUsageNonNullableCompletionTokens :: GHC.Types.Int
  -- | prompt_tokens: Number of prompt tokens used over the course of the run step.
  , runStepCompletionUsageNonNullablePromptTokens :: GHC.Types.Int
  -- | total_tokens: Total number of tokens used (prompt + completion).
  , runStepCompletionUsageNonNullableTotalTokens :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON RunStepCompletionUsageNonNullable
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["completion_tokens" Data.Aeson.Types.ToJSON..= runStepCompletionUsageNonNullableCompletionTokens obj] : ["prompt_tokens" Data.Aeson.Types.ToJSON..= runStepCompletionUsageNonNullablePromptTokens obj] : ["total_tokens" Data.Aeson.Types.ToJSON..= runStepCompletionUsageNonNullableTotalTokens obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["completion_tokens" Data.Aeson.Types.ToJSON..= runStepCompletionUsageNonNullableCompletionTokens obj] : ["prompt_tokens" Data.Aeson.Types.ToJSON..= runStepCompletionUsageNonNullablePromptTokens obj] : ["total_tokens" Data.Aeson.Types.ToJSON..= runStepCompletionUsageNonNullableTotalTokens obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON RunStepCompletionUsageNonNullable
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "RunStepCompletionUsageNonNullable" (\obj -> ((GHC.Base.pure RunStepCompletionUsageNonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "completion_tokens")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "prompt_tokens")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total_tokens"))}
-- | Create a new 'RunStepCompletionUsageNonNullable' with all required fields.
mkRunStepCompletionUsageNonNullable :: GHC.Types.Int -- ^ 'runStepCompletionUsageNonNullableCompletionTokens'
  -> GHC.Types.Int -- ^ 'runStepCompletionUsageNonNullablePromptTokens'
  -> GHC.Types.Int -- ^ 'runStepCompletionUsageNonNullableTotalTokens'
  -> RunStepCompletionUsageNonNullable
mkRunStepCompletionUsageNonNullable runStepCompletionUsageNonNullableCompletionTokens runStepCompletionUsageNonNullablePromptTokens runStepCompletionUsageNonNullableTotalTokens = RunStepCompletionUsageNonNullable{runStepCompletionUsageNonNullableCompletionTokens = runStepCompletionUsageNonNullableCompletionTokens,
                                                                                                                                                                                                                     runStepCompletionUsageNonNullablePromptTokens = runStepCompletionUsageNonNullablePromptTokens,
                                                                                                                                                                                                                     runStepCompletionUsageNonNullableTotalTokens = runStepCompletionUsageNonNullableTotalTokens}
-- | Defines a nullable type alias for 'RunStepCompletionUsageNonNullable' as the schema located at @components.schemas.RunStepCompletionUsage@ in the specification is marked as nullable.
type RunStepCompletionUsage = OpenAI.Common.Nullable RunStepCompletionUsageNonNullable
