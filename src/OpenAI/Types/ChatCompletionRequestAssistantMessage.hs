-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ChatCompletionRequestAssistantMessage
module OpenAI.Types.ChatCompletionRequestAssistantMessage where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias

-- | Defines the object schema located at @components.schemas.ChatCompletionRequestAssistantMessage@ in the specification.
-- 
-- 
data ChatCompletionRequestAssistantMessage = ChatCompletionRequestAssistantMessage {
  -- | content: The contents of the assistant message. Required unless \`tool_calls\` or \`function_call\` is specified.
  chatCompletionRequestAssistantMessageContent :: (GHC.Maybe.Maybe (OpenAI.Common.Nullable Data.Text.Internal.Text))
  -- | function_call: Deprecated and replaced by \`tool_calls\`. The name and arguments of a function that should be called, as generated by the model.
  , chatCompletionRequestAssistantMessageFunctionCall :: (GHC.Maybe.Maybe ChatCompletionRequestAssistantMessageFunctionCall')
  -- | name: An optional name for the participant. Provides the model information to differentiate between participants of the same role.
  , chatCompletionRequestAssistantMessageName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tool_calls: The tool calls generated by the model, such as function calls.
  , chatCompletionRequestAssistantMessageToolCalls :: (GHC.Maybe.Maybe ChatCompletionMessageToolCalls)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ChatCompletionRequestAssistantMessage
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("content" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageContent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("function_call" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageFunctionCall obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tool_calls" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageToolCalls obj) : ["role" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "assistant"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("content" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageContent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("function_call" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageFunctionCall obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tool_calls" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestAssistantMessageToolCalls obj) : ["role" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "assistant"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ChatCompletionRequestAssistantMessage
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ChatCompletionRequestAssistantMessage" (\obj -> (((GHC.Base.pure ChatCompletionRequestAssistantMessage GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "content")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "function_call")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tool_calls"))}
-- | Create a new 'ChatCompletionRequestAssistantMessage' with all required fields.
mkChatCompletionRequestAssistantMessage :: ChatCompletionRequestAssistantMessage
mkChatCompletionRequestAssistantMessage = ChatCompletionRequestAssistantMessage{chatCompletionRequestAssistantMessageContent = GHC.Maybe.Nothing,
                                                                                chatCompletionRequestAssistantMessageFunctionCall = GHC.Maybe.Nothing,
                                                                                chatCompletionRequestAssistantMessageName = GHC.Maybe.Nothing,
                                                                                chatCompletionRequestAssistantMessageToolCalls = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.ChatCompletionRequestAssistantMessage.properties.function_call@ in the specification.
-- 
-- Deprecated and replaced by \`tool_calls\`. The name and arguments of a function that should be called, as generated by the model.
data ChatCompletionRequestAssistantMessageFunctionCall' = ChatCompletionRequestAssistantMessageFunctionCall' {
  -- | arguments: The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
  chatCompletionRequestAssistantMessageFunctionCall'Arguments :: Data.Text.Internal.Text
  -- | name: The name of the function to call.
  , chatCompletionRequestAssistantMessageFunctionCall'Name :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ChatCompletionRequestAssistantMessageFunctionCall'
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["arguments" Data.Aeson.Types.ToJSON..= chatCompletionRequestAssistantMessageFunctionCall'Arguments obj] : ["name" Data.Aeson.Types.ToJSON..= chatCompletionRequestAssistantMessageFunctionCall'Name obj] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["arguments" Data.Aeson.Types.ToJSON..= chatCompletionRequestAssistantMessageFunctionCall'Arguments obj] : ["name" Data.Aeson.Types.ToJSON..= chatCompletionRequestAssistantMessageFunctionCall'Name obj] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ChatCompletionRequestAssistantMessageFunctionCall'
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ChatCompletionRequestAssistantMessageFunctionCall'" (\obj -> (GHC.Base.pure ChatCompletionRequestAssistantMessageFunctionCall' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "arguments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name"))}
-- | Create a new 'ChatCompletionRequestAssistantMessageFunctionCall'' with all required fields.
mkChatCompletionRequestAssistantMessageFunctionCall' :: Data.Text.Internal.Text -- ^ 'chatCompletionRequestAssistantMessageFunctionCall'Arguments'
  -> Data.Text.Internal.Text -- ^ 'chatCompletionRequestAssistantMessageFunctionCall'Name'
  -> ChatCompletionRequestAssistantMessageFunctionCall'
mkChatCompletionRequestAssistantMessageFunctionCall' chatCompletionRequestAssistantMessageFunctionCall'Arguments chatCompletionRequestAssistantMessageFunctionCall'Name = ChatCompletionRequestAssistantMessageFunctionCall'{chatCompletionRequestAssistantMessageFunctionCall'Arguments = chatCompletionRequestAssistantMessageFunctionCall'Arguments,
                                                                                                                                                                                                                             chatCompletionRequestAssistantMessageFunctionCall'Name = chatCompletionRequestAssistantMessageFunctionCall'Name}
