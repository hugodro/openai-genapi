-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ChatCompletionRequestUserMessage
module OpenAI.Types.ChatCompletionRequestUserMessage where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified OpenAI.Common
import OpenAI.TypeAlias
import {-# SOURCE #-} OpenAI.Types.ChatCompletionRequestMessageContentPart

-- | Defines the object schema located at @components.schemas.ChatCompletionRequestUserMessage@ in the specification.
-- 
-- 
data ChatCompletionRequestUserMessage = ChatCompletionRequestUserMessage {
  -- | content: The contents of the user message.
  chatCompletionRequestUserMessageContent :: ChatCompletionRequestUserMessageContent'Variants
  -- | name: An optional name for the participant. Provides the model information to differentiate between participants of the same role.
  , chatCompletionRequestUserMessageName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ChatCompletionRequestUserMessage
    where {toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["content" Data.Aeson.Types.ToJSON..= chatCompletionRequestUserMessageContent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestUserMessageName obj) : ["role" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "user"] : GHC.Base.mempty));
           toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["content" Data.Aeson.Types.ToJSON..= chatCompletionRequestUserMessageContent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (chatCompletionRequestUserMessageName obj) : ["role" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "user"] : GHC.Base.mempty)))}
instance Data.Aeson.Types.FromJSON.FromJSON ChatCompletionRequestUserMessage
    where {parseJSON = Data.Aeson.Types.FromJSON.withObject "ChatCompletionRequestUserMessage" (\obj -> (GHC.Base.pure ChatCompletionRequestUserMessage GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "content")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name"))}
-- | Create a new 'ChatCompletionRequestUserMessage' with all required fields.
mkChatCompletionRequestUserMessage :: ChatCompletionRequestUserMessageContent'Variants -- ^ 'chatCompletionRequestUserMessageContent'
  -> ChatCompletionRequestUserMessage
mkChatCompletionRequestUserMessage chatCompletionRequestUserMessageContent = ChatCompletionRequestUserMessage{chatCompletionRequestUserMessageContent = chatCompletionRequestUserMessageContent,
                                                                                                              chatCompletionRequestUserMessageName = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.ChatCompletionRequestUserMessage.properties.content.oneOf@ in the specification.
-- 
-- The contents of the user message.
data ChatCompletionRequestUserMessageContent'Variants =
   ChatCompletionRequestUserMessageContent'Text Data.Text.Internal.Text
  | ChatCompletionRequestUserMessageContent'ListTChatCompletionRequestMessageContentPart ([ChatCompletionRequestMessageContentPart])
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ChatCompletionRequestUserMessageContent'Variants
    where {toJSON (ChatCompletionRequestUserMessageContent'Text a) = Data.Aeson.Types.ToJSON.toJSON a;
           toJSON (ChatCompletionRequestUserMessageContent'ListTChatCompletionRequestMessageContentPart a) = Data.Aeson.Types.ToJSON.toJSON a}
instance Data.Aeson.Types.FromJSON.FromJSON ChatCompletionRequestUserMessageContent'Variants
    where {parseJSON val = case (ChatCompletionRequestUserMessageContent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((ChatCompletionRequestUserMessageContent'ListTChatCompletionRequestMessageContentPart Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                           {Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a;
                            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a}}
